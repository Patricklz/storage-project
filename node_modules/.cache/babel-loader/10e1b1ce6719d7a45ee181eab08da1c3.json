{"ast":null,"code":"var _jsxFileName = \"/home/ptckz/Documentos/Projetos/storage-project/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport Container from '../../components/Container';\nimport { Form, SubmitButton, List } from './styles';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newRepo: '',\n      repositories: [],\n      loading: false,\n      error: null\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        newRepo: e.target.value,\n        error: null\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true,\n        error: false\n      });\n\n      try {\n        const {\n          newRepo,\n          repositories\n        } = this.state;\n        if (newRepo === '') throw 'Você precisa indicar um repositório';\n        const hasRepo = repositories.find(r => r.name === newRepo);\n        if (hasRepo) throw 'Repositório duplicado';\n        const response = await api.get(`/repos/${newRepo}`);\n        const data = {\n          name: response.data.full_name\n        };\n        this.setState({\n          repositories: [...repositories, data],\n          newRepo: ''\n        });\n      } catch (error) {\n        this.setState({\n          error: true\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  // Carregar os dados do localStorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({\n        repositories: JSON.parse(repositories)\n      });\n    }\n  } // Salvar os dados do localStorage\n\n\n  componentDidUpdate(_, prevState) {\n    const {\n      repositories\n    } = this.state;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  render() {\n    const {\n      newRepo,\n      repositories,\n      loading,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FaGithubAlt, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }), \"Reposit\\xF3rios\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Adicionar reposit\\xF3rio\",\n      value: newRepo,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(SubmitButton, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, loading ? /*#__PURE__*/React.createElement(FaSpinner, {\n      color: \"#FFF\",\n      size: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(FaPlus, {\n      color: \"#FFF\",\n      size: 14,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, repositories.map(repository => /*#__PURE__*/React.createElement(\"li\", {\n      key: repository.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, repository.name), /*#__PURE__*/React.createElement(Link, {\n      to: `/repository/${encodeURIComponent(repository.name)}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }\n    }, \"Detalhes\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/ptckz/Documentos/Projetos/storage-project/src/pages/Main/index.js"],"names":["React","Component","FaGithubAlt","FaPlus","FaSpinner","Link","api","Container","Form","SubmitButton","List","Main","state","newRepo","repositories","loading","error","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","hasRepo","find","r","name","response","get","data","full_name","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","_","prevState","setItem","stringify","render","map","repository","encodeURIComponent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport Container from '../../components/Container';\nimport { Form, SubmitButton, List } from './styles';\n\nexport default class Main extends Component {\n    state = {\n        newRepo: '',\n        repositories: [],\n        loading: false,\n        error: null,\n    };\n\n    // Carregar os dados do localStorage\n    componentDidMount() {\n        const repositories = localStorage.getItem('repositories');\n\n        if (repositories) {\n            this.setState({ repositories: JSON.parse(repositories) });\n        }\n    }\n\n    // Salvar os dados do localStorage\n    componentDidUpdate(_, prevState) {\n        const { repositories } = this.state;\n\n        if (prevState.repositories !== repositories) {\n            localStorage.setItem('repositories', JSON.stringify(repositories));\n        }\n    }\n\n    handleInputChange = e => {\n        this.setState({ newRepo: e.target.value, error: null });\n    };\n\n    handleSubmit = async e => {\n        e.preventDefault();\n\n        this.setState({ loading: true, error: false });\n\n        try {\n            const { newRepo, repositories } = this.state;\n\n            if (newRepo === '') throw 'Você precisa indicar um repositório';\n\n            const hasRepo = repositories.find(r => r.name === newRepo);\n\n            if (hasRepo) throw 'Repositório duplicado';\n\n            const response = await api.get(`/repos/${newRepo}`);\n\n            const data = {\n                name: response.data.full_name,\n            };\n\n            this.setState({\n                repositories: [...repositories, data],\n                newRepo: '',\n            });\n        } catch (error) {\n            this.setState({ error: true });\n        } finally {\n            this.setState({ loading: false });\n        }\n    };\n\n    render() {\n        const { newRepo, repositories, loading, error } = this.state;\n\n        return (\n            <Container>\n                <h1>\n                    <FaGithubAlt />\n          Repositórios\n        </h1>\n\n                <Form onSubmit={this.handleSubmit} error={error}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Adicionar repositório\"\n                        value={newRepo}\n                        onChange={this.handleInputChange}\n                    />\n\n                    <SubmitButton loading={loading}>\n                        {loading ? (\n                            <FaSpinner color=\"#FFF\" size={14} />\n                        ) : (\n                                <FaPlus color=\"#FFF\" size={14} />\n                            )}\n                    </SubmitButton>\n                </Form>\n\n                <List>\n                    {repositories.map(repository => (\n                        <li key={repository.name}>\n                            <span>{repository.name}</span>\n                            <Link to={`/repository/${encodeURIComponent(repository.name)}`}>\n                                Detalhes\n              </Link>\n                        </li>\n                    ))}\n                </List>\n            </Container>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}