{"ast":null,"code":"var _jsxFileName = \"/home/ptckz/Documentos/Projetos/storage-project/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport api from '../../services/api';\nexport default class Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repository: {},\n      issues: [],\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const repoName = decodeURIComponent(match.params.repository);\n    const [repository, issues] = await Promise.all([api.get(`/repos/${repoName}`), api.get(`/repos/${repoName}/issues`, {\n      params: {\n        state: 'open',\n        per_page: 5\n      }\n    })]);\n    console.log(repository);\n    console.log(issues);\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    }, \"Repository\");\n  }\n\n}","map":{"version":3,"sources":["/home/ptckz/Documentos/Projetos/storage-project/src/pages/Repository/index.js"],"names":["React","Component","api","Repository","state","repository","issues","loading","componentDidMount","match","props","repoName","decodeURIComponent","params","Promise","all","get","per_page","console","log","setState","data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAGA,eAAe,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC9CG,KAD8C,GACtC;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,OAAO,EAAE;AAHL,KADsC;AAAA;;AAO9C,QAAMC,iBAAN,GAA0B;AACtB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AAEA,UAAMC,QAAQ,GAAGC,kBAAkB,CAACH,KAAK,CAACI,MAAN,CAAaR,UAAd,CAAnC;AAEA,UAAM,CAACA,UAAD,EAAaC,MAAb,IAAuB,MAAMQ,OAAO,CAACC,GAAR,CAAY,CAC3Cb,GAAG,CAACc,GAAJ,CAAS,UAASL,QAAS,EAA3B,CAD2C,EAE3CT,GAAG,CAACc,GAAJ,CAAS,UAASL,QAAS,SAA3B,EAAqC;AACjCE,MAAAA,MAAM,EAAE;AACJT,QAAAA,KAAK,EAAE,MADH;AAEJa,QAAAA,QAAQ,EAAE;AAFN;AADyB,KAArC,CAF2C,CAAZ,CAAnC;AASAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AAEA,SAAKc,QAAL,CAAc;AACVf,MAAAA,UAAU,EAAEA,UAAU,CAACgB,IADb;AAEVf,MAAAA,MAAM,EAAEA,MAAM,CAACe,IAFL;AAGVd,MAAAA,OAAO,EAAE;AAHC,KAAd;AAKH;;AAEDe,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;;AAjC6C","sourcesContent":["import React, { Component } from 'react'\nimport api from '../../services/api';\n\n\nexport default class Repository extends Component {\n    state = {\n        repository: {},\n        issues: [],\n        loading: true,\n    }\n\n    async componentDidMount() {\n        const { match } = this.props;\n\n        const repoName = decodeURIComponent(match.params.repository);\n\n        const [repository, issues] = await Promise.all([\n            api.get(`/repos/${repoName}`),\n            api.get(`/repos/${repoName}/issues`, {\n                params: {\n                    state: 'open',\n                    per_page: 5,\n                },\n            }),\n        ]);\n        console.log(repository);\n        console.log(issues);\n\n        this.setState({\n            repository: repository.data,\n            issues: issues.data,\n            loading: false,\n        })\n    }\n\n    render() {\n        return <h1>Repository</h1>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}